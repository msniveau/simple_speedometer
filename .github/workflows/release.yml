name: MSBuild

on:
  push:
    tags: [ "v*" ]

env:
  # Path to the solution file relative to the root of the project.
  SOLUTION_FILE_PATH: .

  # Configuration type to build.
  # You can convert this to a build matrix if you need coverage of multiple configuration types.
  # https://docs.github.com/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
  BUILD_CONFIGURATION: Release

permissions:
  contents: write

jobs:
  build:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v3
      with:
          submodules: 'recursive'

    - name: Add MSBuild to PATH
      uses: microsoft/setup-msbuild@v1.0.2

    - name: Restore NuGet packages
      working-directory: ${{env.GITHUB_WORKSPACE}}
      run: nuget restore ${{env.SOLUTION_FILE_PATH}}
      
    - name: Extract Version from GitHub Ref
      shell: bash
      run: echo "VERSION=${GITHUB_REF_NAME}" >> $GITHUB_ENV
      
    - name: Update Version in version.h
      run: |
        $VERSION = "${{ env.VERSION }}"
        (Get-Content src/version.h) -replace '#define ADDON_VERSION ".*"', "#define ADDON_VERSION `"$VERSION`"" | Set-Content src/version.h
      shell: pwsh

    - name: Build
      working-directory: ${{env.GITHUB_WORKSPACE}}
      # Add additional options to the MSBuild command line here (like platform or verbosity level).
      # See https://docs.microsoft.com/visualstudio/msbuild/msbuild-command-line-reference
      run: msbuild /m /p:Configuration=${{env.BUILD_CONFIGURATION}} ${{env.SOLUTION_FILE_PATH}}
          
    - name: Release
      uses: softprops/action-gh-release@v2
      if: startsWith(github.ref, 'refs/tags/v')
      with:
        body_path: changelog/${{ github.ref_name }}-CHANGELOG.txt
        files: x64/simple_speedometer.dll